{"version":3,"sources":["App/constants/Colors.js","App/components/layouts/Navbar/Navbar.styles.js","App/components/layouts/Navbar/Navbar.component.js","App/assets/img/Hero.svg","App/pages/Homepage/Homepage.styles.js","App/components/layouts/CustomButton/CustomButton.component.js","App/redux/Github/github.types.js","App/pages/Homepage/Homepage.js","App/redux/Github/github.actions.js","App/assets/img/About.svg","App/pages/About/Aboutpage.styles.js","App/pages/About/AboutPage.js","App/components/users/UserItem/UserItem.styles.js","App/components/users/UserItem/UserItem.component.js","App/components/users/Users/Users.component.js","App/pages/GithubPage/GithubPage.js","App/pages/UserDetailPage/UserDetailPage.styles.js","App/components/layouts/TextWrapper/TextWrapper.component.js","App/components/users/UserInformation/UserInformation.styles.js","App/components/users/UserInformation/UserInformation.component.js","App/components/users/Repository/Repository.styles.js","App/components/users/Repository/Repository.component.js","App/pages/UserDetailPage/UserDetailPage.js","App/redux/Github/github.reducers.js","App/redux/rootReducer.js","App/redux/store.js","Global.styles.js","App.js","reportWebVitals.js","index.js"],"names":["Colors","primary","secondary","tertiary","offWhite","white","black","gray","NavContainer","styled","div","Nav","nav","LogoContainer","Link","Logo","GithubIcon","FaGithub","NavLinks","NavLink","HamburgerContainer","HamburgerMenuOpen","MdMenu","HamburgerMenuClose","MdClear","MobileMenuContainer","MobileLink","Navbar","useState","menuVisible","setMenuVisible","to","onClick","Home","main","TextContainer","ImgContainer","Img","img","H1","h1","Form","form","Input","input","Button","a","CustomButton","props","title","GithubTypes","SET_GITHUB_USERS","SET_GITHUB_USER","withRouter","history","search","setSearch","githubUsers","setGithubUsers","dispatch","useDispatch","SubmitHandler","e","preventDefault","axios","get","process","response","data","items","push","useEffect","type","payload","onSubmit","placeholder","value","onChange","target","as","src","HeroImage","AboutContainer","LeftColumn","RightColumn","Heading","p","Paragraph","AboutPage","AboutImage","alt","UserItemContainer","UserName","user","login","avatar_url","UsersContainer","Users","users","map","id","GithubPage","useSelector","state","github","UserDetail","Name","ButtonContainer","RepoContainer","Title","Text","TextWrapper","text","WebsiteContainer","WebsiteTitle","WebsiteLink","UserInformation","location","bio","hireable","href","blog","twitter_username","followers","following","public_repos","public_gists","Container","Details","RepoDetails","Repository","repo","name","language","watchers","forks_count","svn_url","match","setUser","repository","setRepository","username","getUserRepository","repos_url","searchUser","params","url","html_url","InitialState","searchText","githubReducer","action","rootReducer","combineReducers","store","createStore","GlobalStyles","createGlobalStyle","App","exact","path","component","Homepage","UserDetailPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51c16e67.chunk.js","sourcesContent":["const Colors = {\r\n  primary: \"#112D4E\",\r\n  secondary: \"#3F72AF\",\r\n  tertiary: \"#DBE2EF\",\r\n  offWhite: \"#F4F6F6\",\r\n  white: \"#fff\",\r\n  black: \"#000\",\r\n  gray: \"#8080802e\",\r\n};\r\n\r\nexport default Colors;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Importing Colors\r\nimport Colors from \"../../../constants/Colors\";\r\n\r\n// Importing Icons\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { MdMenu, MdClear } from \"react-icons/md\";\r\n\r\nexport const NavContainer = styled.div`\r\n  width: 100%;\r\n  height: 80px;\r\n  background-color: ${Colors.primary};\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n  width: 1024px;\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n  padding-top: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    width: 768px;\r\n    max-width: 768px;\r\n  }\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    width: 650px;\r\n    max-width: 650px;\r\n  }\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    width: 425px;\r\n    max-width: 425px;\r\n    padding: 25px;\r\n  }\r\n\r\n  /* Breakpoint 375px  */\r\n  @media screen and (max-width: 376px) {\r\n    width: 375px;\r\n    max-width: 375px;\r\n  }\r\n\r\n  /* Breakpoint 320px  */\r\n  @media screen and (max-width: 321px) {\r\n    width: 320px;\r\n    max-width: 320px;\r\n  }\r\n`;\r\n\r\nexport const LogoContainer = styled(Link)`\r\n  text-decoration: none;\r\n  display: block;\r\n`;\r\n\r\nexport const Logo = styled.div`\r\n  font-size: 1.5rem;\r\n  color: ${Colors.white};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const GithubIcon = styled(FaGithub)`\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const NavLinks = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${Colors.white};\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  display: block;\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 20px;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${Colors.secondary};\r\n  }\r\n`;\r\n\r\nexport const HamburgerContainer = styled.div`\r\n  display: none;\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const HamburgerMenuOpen = styled(MdMenu)`\r\n  font-size: 2rem;\r\n  color: ${Colors.white};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const HamburgerMenuClose = styled(MdClear)`\r\n  font-size: 2rem;\r\n  color: ${Colors.white};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MobileMenuContainer = styled.div`\r\n  background-color: ${Colors.primary};\r\n  width: 100%;\r\n  padding: 5px;\r\n  z-index: 10;\r\n  text-align: center;\r\n  margin-top: -10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport const MobileLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${Colors.white};\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  display: block;\r\n  z-index: 10;\r\n  text-align: center;\r\n  font-weight: 600;\r\n\r\n  margin-bottom: 5px;\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\n// Importing Styles\r\nimport {\r\n  NavContainer,\r\n  Nav,\r\n  LogoContainer,\r\n  Logo,\r\n  GithubIcon,\r\n  NavLinks,\r\n  NavLink,\r\n  HamburgerContainer,\r\n  HamburgerMenuOpen,\r\n  HamburgerMenuClose,\r\n  MobileMenuContainer,\r\n  MobileLink,\r\n} from \"./Navbar.styles\";\r\n\r\nconst Navbar = () => {\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n  return (\r\n    <NavContainer>\r\n      <Nav>\r\n        <LogoContainer to=\"/\">\r\n          <Logo>\r\n            <GithubIcon /> Github Finder\r\n          </Logo>\r\n        </LogoContainer>\r\n\r\n        <NavLinks>\r\n          <NavLink to=\"/\">Home</NavLink>\r\n          <NavLink to=\"/about\">About</NavLink>\r\n        </NavLinks>\r\n\r\n        <HamburgerContainer>\r\n          {menuVisible ? (\r\n            <HamburgerMenuClose onClick={() => setMenuVisible(!menuVisible)} />\r\n          ) : (\r\n            <HamburgerMenuOpen onClick={() => setMenuVisible(!menuVisible)} />\r\n          )}\r\n        </HamburgerContainer>\r\n      </Nav>\r\n\r\n      {menuVisible && (\r\n        <MobileMenuContainer>\r\n          <MobileLink to=\"/\">Home</MobileLink>\r\n          <MobileLink to=\"/about\">About</MobileLink>\r\n        </MobileMenuContainer>\r\n      )}\r\n    </NavContainer>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/Hero.10c99e4f.svg\";","import styled from \"styled-components\";\r\n\r\n// Importing Colors\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nexport const Home = styled.main`\r\n  margin: 10% auto 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  /* Breakpoint 1440px  */\r\n  @media screen and (max-width: 1440px) {\r\n    margin: 21% auto 0 auto;\r\n  }\r\n\r\n  /* Breakpoint 1024px  */\r\n  @media screen and (max-width: 1024px) {\r\n    margin: 15% auto 2% auto;\r\n  }\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    margin: 20% auto 10% auto;\r\n  }\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    flex-direction: column-reverse;\r\n    margin: 40px auto 0 auto;\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nexport const TextContainer = styled.div`\r\n  width: 45%;\r\n  margin-right: 80px;\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    width: 78%;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  /* Breakpoint 320px  */\r\n  @media screen and (max-width: 321px) {\r\n    width: 90%;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\nexport const ImgContainer = styled.div`\r\n  width: 45%;\r\n  height: 80%;\r\n  z-index: 1;\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    width: 90%;\r\n    height: 300px;\r\n    margin-bottom: 40px;\r\n    z-index: 1;\r\n  }\r\n\r\n  /* Breakpoint 375px  */\r\n  @media screen and (max-width: 376px) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n  font-size: 4rem;\r\n  font-weight: 600;\r\n  color: ${Colors.primary};\r\n\r\n  /* Breakpoint 1024px  */\r\n  @media screen and (max-width: 1024px) {\r\n    font-size: 3rem;\r\n  }\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 2.7rem;\r\n  }\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  /* Breakpoint 375px  */\r\n  @media screen and (max-width: 376px) {\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n  }\r\n`;\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nexport const Input = styled.input`\r\n  display: block;\r\n  padding: 10px 30px;\r\n  outline: none;\r\n  border: 1px solid ${Colors.primary};\r\n\r\n  /* Breakpoint 375px  */\r\n  @media screen and (max-width: 376px) {\r\n    padding: 10px 15px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\n// Importing Colors\r\nimport Colors from \"../../../constants/Colors\";\r\n\r\nexport const Button = styled.a`\r\n  color: ${Colors.white};\r\n  background-color: ${Colors.primary};\r\n  padding: 11px 30px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  border: none;\r\n  outline: none;\r\n  display: block;\r\n  text-decoration: none;\r\n  /* font-weight: 600; */\r\n\r\n  &:hover {\r\n    background-color: ${Colors.secondary};\r\n  }\r\n`;\r\n\r\nconst CustomButton = (props) => {\r\n  return <Button {...props}>{props.title}</Button>;\r\n};\r\n\r\nexport default CustomButton;\r\n","const GithubTypes = {\r\n  SET_GITHUB_USERS: \"SET_GITHUB_USERS\",\r\n  SET_GITHUB_USER: \"SET_GITHUB_USER\",\r\n};\r\n\r\nexport default GithubTypes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Importing axios\r\nimport axios from \"axios\";\r\n\r\n// Importing Img\r\nimport HeroImage from \"../../assets/img/Hero.svg\";\r\n\r\n// Importing Styles\r\nimport {\r\n  Home,\r\n  TextContainer,\r\n  ImgContainer,\r\n  Img,\r\n  H1,\r\n  Input,\r\n  Form,\r\n} from \"./Homepage.styles\";\r\n\r\n// Importing CustomButton\r\nimport CustomButton from \"../../components/layouts/CustomButton/CustomButton.component\";\r\n\r\n// Importing redux\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as githubActions from \"../../redux/Github/github.actions\";\r\n\r\nconst Homepage = ({ history }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [githubUsers, setGithubUsers] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const SubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const response = await axios.get(\r\n      `https://api.github.com/search/users?q=${search}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n    setSearch(\"\");\r\n    setGithubUsers(response.data.items);\r\n    history.push(\"/github\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(githubActions.setGithubUsers(githubUsers));\r\n  }, [dispatch, githubUsers]);\r\n\r\n  return (\r\n    <Home>\r\n      <TextContainer>\r\n        <H1>Search Github Users</H1>\r\n        <Form onSubmit={SubmitHandler}>\r\n          <Input\r\n            type=\"search\"\r\n            placeholder=\"Search Users...\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n          <CustomButton as=\"button\" title=\"Search\" />\r\n        </Form>\r\n      </TextContainer>\r\n\r\n      <ImgContainer>\r\n        <Img src={HeroImage} />\r\n      </ImgContainer>\r\n    </Home>\r\n  );\r\n};\r\n\r\nexport default withRouter(Homepage);\r\n","// Importing Action types\r\nimport GithubTypes from \"./github.types\";\r\n\r\nexport const setGithubUsers = (users) => ({\r\n  type: GithubTypes.SET_GITHUB_USERS,\r\n  payload: users,\r\n});\r\n\r\nexport const setGithubUser = (user) => ({\r\n  type: GithubTypes.SET_GITHUB_USER,\r\n  payload: user,\r\n});\r\n","export default __webpack_public_path__ + \"static/media/About.5c313ee8.svg\";","import styled from \"styled-components\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nexport const AboutContainer = styled.div`\r\n  margin: 7% auto 5% auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  /* Breakpoint 1440px  */\r\n  @media screen and (max-width: 1440px) {\r\n    margin: 18% auto 5% auto;\r\n  }\r\n\r\n  /* Breakpoint 1024px  */\r\n  @media screen and (max-width: 1024px) {\r\n    margin: 6% auto 2% auto;\r\n  }\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    margin: 10% auto 4% auto;\r\n  }\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    flex-direction: column;\r\n    margin: 10% auto 50px auto;\r\n  }\r\n\r\n  /* Breakpoint 375px  */\r\n  @media screen and (max-width: 376px) {\r\n    margin: 0 auto 2% auto;\r\n  }\r\n`;\r\n\r\nexport const LeftColumn = styled.div`\r\n  width: 40%;\r\n  height: 450px;\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    width: 47%;\r\n  }\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    width: 90%;\r\n    height: 250px;\r\n  }\r\n`;\r\n\r\nexport const RightColumn = styled.div`\r\n  width: 50%;\r\n  height: 450px;\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    width: 47%;\r\n  }\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    width: 90%;\r\n    height: 250px;\r\n  }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Heading = styled.p`\r\n  font-size: 1.3rem;\r\n  font-weight: 600;\r\n  color: ${Colors.primary};\r\n  text-transform: uppercase;\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.5rem;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  font-size: 1rem;\r\n  color: #758283;\r\n  font-weight: 400;\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 0.9rem;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\n// Importing Img\r\nimport AboutImage from \"../../assets/img/About.svg\";\r\n\r\n//Importing Styles\r\nimport {\r\n  AboutContainer,\r\n  LeftColumn,\r\n  RightColumn,\r\n  Img,\r\n  Heading,\r\n  Paragraph,\r\n} from \"./Aboutpage.styles\";\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <AboutContainer>\r\n      <LeftColumn>\r\n        <Img src={AboutImage} alt=\"About Page Image\" />\r\n      </LeftColumn>\r\n      <RightColumn>\r\n        <Heading>About</Heading>\r\n        <Paragraph>\r\n          Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nulla, ullam\r\n          saepe eius nostrum facere dolorem aperiam qui beatae ea ab odio. Amet\r\n          eos, molestiae quo mollitia velit enim ipsa ipsum.\r\n        </Paragraph>\r\n        <Paragraph>\r\n          Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nulla, ullam\r\n          saepe eius nostrum facere dolorem aperiam qui beatae ea ab odio. Amet\r\n          eos, molestiae quo mollitia velit enim ipsa ipsum.\r\n        </Paragraph>\r\n        <Paragraph>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Vero autem\r\n          vitae nobis. Debitis, amet dolore.\r\n        </Paragraph>\r\n      </RightColumn>\r\n    </AboutContainer>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import styled from \"styled-components\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// Importing Colors\r\nimport Colors from \"../../../constants/Colors\";\r\n\r\nexport const UserItemContainer = styled.div`\r\n  background-color: ${Colors.white};\r\n  width: 30%;\r\n  padding: 15px;\r\n  margin-bottom: 50px;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* box-shadow: 5px 5px 15px 0px rgba(0, 0, 0, 0.57); */\r\n  box-shadow: 5px 5px 15px 0px rgba(17, 45, 78, 0.57);\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    width: 80%;\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nexport const ImgContainer = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 2px solid ${Colors.primary};\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const UserName = styled.p`\r\n  font-size: 1.2rem;\r\n  color: ${Colors.primary};\r\n  text-transform: capitalize;\r\n`;\r\n\r\nexport const Button = styled.a`\r\n  text-decoration: none;\r\n  border: 2px solid ${Colors.primary};\r\n  padding: 5px 20px;\r\n  border-radius: 10px;\r\n  color: ${Colors.primary};\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${Colors.primary};\r\n    color: ${Colors.white};\r\n  }\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    display: block;\r\n    width: 50%;\r\n    text-align: center;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Importing Styles\r\nimport {\r\n  UserItemContainer,\r\n  ImgContainer,\r\n  Img,\r\n  UserName,\r\n  Button,\r\n} from \"./UserItem.styles\";\r\n\r\nconst UserItem = (props) => {\r\n  const { login, avatar_url } = props.user;\r\n\r\n  const userClickHandler = () => {\r\n    props.history.push(`/github/${login}`);\r\n  };\r\n  return (\r\n    <UserItemContainer>\r\n      <ImgContainer>\r\n        <Img src={avatar_url} alt=\"User Image\" />\r\n      </ImgContainer>\r\n\r\n      <UserName>{login}</UserName>\r\n      <Button onClick={userClickHandler}>More</Button>\r\n    </UserItemContainer>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserItem);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Importing Components\r\nimport UserItem from \"../UserItem/UserItem.component\";\r\n\r\nconst UsersContainer = styled.div`\r\n  padding: 0;\r\n  margin: 30px auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Users = (props) => {\r\n  return (\r\n    <UsersContainer>\r\n      {props.users.map((user) => (\r\n        <UserItem key={user.id} user={user} />\r\n      ))}\r\n    </UsersContainer>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\n\r\n// Importing Components\r\nimport Users from \"../../components/users/Users/Users.component\";\r\n\r\n// Importing redux\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst GithubPage = () => {\r\n  let users = useSelector((state) => state.github.users);\r\n\r\n  return <div>{users && <Users users={users} />}</div>;\r\n};\r\n\r\nexport default GithubPage;\r\n","import styled from \"styled-components\";\r\n\r\n// Importing Colors\r\nimport Colors from \"./../../constants/Colors\";\r\n\r\nexport const UserDetail = styled.div`\r\n  margin: 5% auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const LeftColumn = styled.div`\r\n  width: 30%;\r\n  height: 450px;\r\n  background-color: ${Colors.gray};\r\n  border-radius: 15px;\r\n  box-shadow: 5px 5px 15px 0px rgba(17, 45, 78, 0.57);\r\n\r\n  /* Breakpoint 1024px  */\r\n  @media screen and (max-width: 1024px) {\r\n    height: 500px;\r\n  }\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    width: 90%;\r\n    height: 350px;\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nexport const RightColumn = styled.div`\r\n  width: 65%;\r\n  height: 450px;\r\n\r\n  /* Breakpoint 1024px  */\r\n  @media screen and (max-width: 1024px) {\r\n    margin-top: -40px;\r\n    width: 66%;\r\n  }\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    width: 90%;\r\n    height: 350px;\r\n    margin-bottom: 90px;\r\n    margin-top: -20px;\r\n  }\r\n`;\r\n\r\nexport const ImgContainer = styled.div`\r\n  border-top-left-radius: 15px;\r\n  border-top-right-radius: 15px;\r\n\r\n  /* Breakpoint 1024px  */\r\n  @media screen and (max-width: 1024px) {\r\n    height: 350px;\r\n  }\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    height: 224px;\r\n  }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-top-left-radius: 15px;\r\n  border-top-right-radius: 15px;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  font-size: 1.5rem;\r\n  color: ${Colors.primary};\r\n  font-weight: 600;\r\n  text-align: center;\r\n  margin-top: 10px;\r\n  margin-bottom: 15px;\r\n\r\n  /* Breakpoint 1024px  */\r\n  @media screen and (max-width: 1024px) {\r\n    margin-top: 25px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  /* Breakpoint 320px  */\r\n  @media screen and (max-width: 321px) {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  width: 50%;\r\n  margin: 0 auto;\r\n\r\n  /* Breakpoint 1024px  */\r\n  @media screen and (max-width: 1024px) {\r\n    width: 60%;\r\n    margin: 10px auto;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.a`\r\n  text-decoration: none;\r\n  color: ${Colors.primary};\r\n  border: 2px solid ${Colors.primary};\r\n  padding: 10px 15px;\r\n  display: block;\r\n  text-align: center;\r\n  border-radius: 15px;\r\n  font-weight: 600;\r\n\r\n  &:hover {\r\n    background-color: ${Colors.primary};\r\n    color: ${Colors.white};\r\n  }\r\n`;\r\n\r\nexport const RepoContainer = styled.div`\r\n  width: 1024px;\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n\r\n  /* Breakpoint 1024px  */\r\n  @media screen and (max-width: 1024px) {\r\n    width: 768px;\r\n    max-width: 768px;\r\n  }\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    width: 650px;\r\n    max-width: 650px;\r\n  }\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    width: 90%;\r\n    margin: 100px auto 30px auto;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Colors from \"../../../constants/Colors\";\r\n\r\n// Styles\r\nexport const TextContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n\r\n  :not(:last-child) {\r\n    margin-bottom: -20px;\r\n  }\r\n\r\n  /* Breakpoint 320px  */\r\n  @media screen and (max-width: 320px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.p`\r\n  font-weight: 600;\r\n  font-size: 1.1rem;\r\n  color: ${Colors.primary};\r\n  text-transform: capitalize;\r\n  width: 30%;\r\n\r\n  /* Breakpoint 320px  */\r\n  @media screen and (max-width: 320px) {\r\n    font-size: 1rem;\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 1rem;\r\n  /* color: ${Colors.black}; */\r\n  color: #758283;\r\n  font-weight: 400;\r\n  text-transform: capitalize;\r\n  width: 70%;\r\n\r\n  /* Breakpoint 320px  */\r\n  @media screen and (max-width: 320px) {\r\n    font-size: 0.9rem;\r\n    width: 65%;\r\n  }\r\n`;\r\n\r\nconst TextWrapper = (props) => {\r\n  return (\r\n    <TextContainer>\r\n      <Title>{props.title}:</Title>\r\n      <Text>{props.text}</Text>\r\n    </TextContainer>\r\n  );\r\n};\r\n\r\nexport default TextWrapper;\r\n","import styled from \"styled-components\";\r\nimport Colors from \"../../../constants/Colors\";\r\n\r\n// Styles\r\nexport const WebsiteContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  :not(:last-child) {\r\n    margin-bottom: -20px;\r\n  }\r\n\r\n  /* Breakpoint 320px \r\n  @media screen and (max-width: 320px) {\r\n    justify-content: space-between;\r\n  } */\r\n`;\r\n\r\nexport const WebsiteTitle = styled.p`\r\n  font-weight: 600;\r\n  font-size: 1.1rem;\r\n  color: ${Colors.primary};\r\n  text-transform: capitalize;\r\n  width: 30%;\r\n\r\n  /* Breakpoint 320px  */\r\n  @media screen and (max-width: 320px) {\r\n    font-size: 1rem;\r\n    width: 25%;\r\n    margin-right: 30px;\r\n  }\r\n`;\r\n\r\nexport const WebsiteLink = styled.a`\r\n  font-size: 1rem;\r\n  color: #758283;\r\n  font-weight: 400;\r\n  text-transform: capitalize;\r\n  width: 70%;\r\n  text-decoration: none;\r\n  display: block;\r\n\r\n  &:hover {\r\n    color: ${Colors.primary};\r\n  }\r\n\r\n  /* Breakpoint 320px  */\r\n  @media screen and (max-width: 320px) {\r\n    font-size: 0.9rem;\r\n    width: 65%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\n// Importing Components\r\nimport TextWrapper from \"../../layouts/TextWrapper/TextWrapper.component\";\r\n\r\n// Importing Styles\r\nimport {\r\n  WebsiteContainer,\r\n  WebsiteTitle,\r\n  WebsiteLink,\r\n} from \"./UserInformation.styles\";\r\n\r\nconst UserInformation = ({ user }) => {\r\n  return (\r\n    <div>\r\n      <TextWrapper title=\"username\" text={user.login ? user.login : \"none\"} />\r\n      <TextWrapper\r\n        title=\"location\"\r\n        text={user.location ? user.location : \"none\"}\r\n      />\r\n      <TextWrapper title=\"bio\" text={user.bio ? user.bio : \"None\"} />\r\n      <TextWrapper title=\"hireable\" text={user.hireable ? \"yes\" : \"no\"} />\r\n\r\n      <WebsiteContainer>\r\n        <WebsiteTitle>Website: </WebsiteTitle>\r\n        <div>\r\n          <WebsiteLink href={user.blog ? \"https://\" + user.blog : \"/\"}>\r\n            {user.blog ? user.blog : \"none\"}\r\n          </WebsiteLink>\r\n        </div>\r\n      </WebsiteContainer>\r\n\r\n      <TextWrapper\r\n        title=\"twitter\"\r\n        text={user.twitter_username ? user.twitter_username : \"none\"}\r\n      />\r\n      <TextWrapper\r\n        title=\"followers\"\r\n        text={user.followers ? user.followers : 0}\r\n      />\r\n      <TextWrapper\r\n        title=\"following\"\r\n        text={user.following ? user.following : 0}\r\n      />\r\n      <TextWrapper\r\n        title=\"public repository\"\r\n        text={user.public_repos ? user.public_repos : 0}\r\n      />\r\n\r\n      <TextWrapper\r\n        title=\"public gists\"\r\n        text={user.public_gists ? user.public_gists : 0}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInformation;\r\n","import styled from \"styled-components\";\r\n\r\n// Importing Colors\r\nimport Colors from \"../../../constants/Colors\";\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${Colors.gray};\r\n  border-radius: 15px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 30px;\r\n  margin-bottom: 20px;\r\n\r\n  &:hover {\r\n    box-shadow: 5px 5px 15px 0px rgba(17, 45, 78, 0.57);\r\n  }\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Details = styled.div`\r\n  width: 50%;\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    width: 90%;\r\n  }\r\n`;\r\nexport const RepoDetails = styled.div`\r\n  width: 25%;\r\n\r\n  /* Breakpoint 1024px  */\r\n  @media screen and (max-width: 1024px) {\r\n    width: 14%;\r\n  }\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    width: 90%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`;\r\nexport const ButtonContainer = styled.div`\r\n  width: 20%;\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const Heading = styled.p`\r\n  font-size: 1.2rem;\r\n  color: ${Colors.primary};\r\n  font-weight: 600;\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    margin-bottom: -10px;\r\n    margin-top: 5px;\r\n  }\r\n\r\n  /* Breakpoint 320px  */\r\n  @media screen and (max-width: 321px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 1rem;\r\n  color: ${Colors.black};\r\n  font-weight: 400;\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    margin-bottom: -10px;\r\n  }\r\n\r\n  /* Breakpoint 320px  */\r\n  @media screen and (max-width: 321px) {\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.a`\r\n  text-decoration: none;\r\n  color: ${Colors.primary};\r\n  border: 2px solid ${Colors.primary};\r\n  padding: 10px 15px;\r\n  display: block;\r\n  text-align: center;\r\n  border-radius: 15px;\r\n  font-weight: 600;\r\n\r\n  &:hover {\r\n    background-color: ${Colors.primary};\r\n    color: ${Colors.white};\r\n  }\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    margin-top: 20px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  /* Breakpoint 320px  */\r\n  @media screen and (max-width: 321px) {\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\n// importing Styles\r\nimport {\r\n  Container,\r\n  Details,\r\n  RepoDetails,\r\n  ButtonContainer,\r\n  Button,\r\n  Heading,\r\n  Text,\r\n} from \"./Repository.styles\";\r\n\r\nconst Repository = ({ repo }) => {\r\n  return (\r\n    <Container>\r\n      <Details>\r\n        <Heading>{repo.name}</Heading>\r\n        <Text>Language: {repo.language ? repo.language : \"Not Specified\"}</Text>\r\n      </Details>\r\n\r\n      <RepoDetails>\r\n        <Text>Stars: {repo.watchers}</Text>\r\n        <Text>Forks: {repo.forks_count}</Text>\r\n      </RepoDetails>\r\n\r\n      <ButtonContainer>\r\n        <Button href={repo.svn_url}>View More</Button>\r\n      </ButtonContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Repository;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Importing Axios\r\nimport axios from \"axios\";\r\n\r\n// importing styles\r\nimport {\r\n  UserDetail,\r\n  LeftColumn,\r\n  RightColumn,\r\n  ImgContainer,\r\n  Img,\r\n  Name,\r\n  Button,\r\n  ButtonContainer,\r\n  RepoContainer,\r\n} from \"./UserDetailPage.styles\";\r\n\r\n// Importing Components\r\nimport UserInformation from \"../../components/users/UserInformation/UserInformation.component\";\r\nimport Repository from \"../../components/users/Repository/Repository.component\";\r\n\r\nconst UserDetailPage = ({ match }) => {\r\n  //State\r\n  const [user, setUser] = useState({});\r\n  const [repository, setRepository] = useState([]);\r\n\r\n  // Pulling username from params\r\n  useEffect(() => {\r\n    // Searching user data\r\n    const searchUser = async (username) => {\r\n      const response = await axios.get(\r\n        `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n      );\r\n      setUser(response.data);\r\n      getUserRepository(response.data.repos_url);\r\n    };\r\n\r\n    const username = match.params.login;\r\n    searchUser(username);\r\n  }, [match.params.login]);\r\n\r\n  // Get User Repository\r\n  const getUserRepository = async (url) => {\r\n    const response = await axios.get(url);\r\n    setRepository(response.data);\r\n  };\r\n  return (\r\n    <>\r\n      <UserDetail>\r\n        <LeftColumn>\r\n          <ImgContainer>\r\n            <Img src={user.avatar_url} alt=\"User Image\" />\r\n          </ImgContainer>\r\n          <Name>{user.name}</Name>\r\n          <ButtonContainer>\r\n            <Button href={user.html_url}>View Profile</Button>\r\n          </ButtonContainer>\r\n        </LeftColumn>\r\n\r\n        <RightColumn>\r\n          <UserInformation user={user} />\r\n        </RightColumn>\r\n      </UserDetail>\r\n\r\n      <RepoContainer>\r\n        <Name>Repositories</Name>\r\n        {repository.map((repo) => (\r\n          <Repository key={repo.name} repo={repo} />\r\n        ))}\r\n      </RepoContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserDetailPage);\r\n","// Importing Github action types\r\nimport GithubTypes from \"./github.types\";\r\n\r\nconst InitialState = {\r\n  searchText: \"\",\r\n  users: [],\r\n  user: {},\r\n};\r\n\r\nconst githubReducer = (state = InitialState, action) => {\r\n  switch (action.type) {\r\n    case GithubTypes.SET_GITHUB_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n\r\n    case GithubTypes.SET_GITHUB_USER:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default githubReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\n// Importing Reducers\r\nimport githubReducer from \"./Github/github.reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  github: githubReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\n\r\n// Importing Root reducer\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\n// Importing Colors\r\nimport Colors from \"./App/constants/Colors\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    body {\r\n    padding: 0;\r\n    margin: 0;\r\n    background-color: ${Colors.offWhite};\r\n    box-sizing: border-box;\r\n    font-family: 'Poppins', sans-serif;\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    }\r\n\r\n    *{\r\n        box-sizing: border-box;\r\n    }\r\n\r\n`;\r\n\r\nexport const Container = styled.main`\r\n  width: 1024px;\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n\r\n  /* Breakpoint 1024px  */\r\n  @media screen and (max-width: 1024px) {\r\n    width: 768px;\r\n    max-width: 768px;\r\n  }\r\n\r\n  /* Breakpoint 768px  */\r\n  @media screen and (max-width: 768px) {\r\n    width: 650px;\r\n    max-width: 650px;\r\n  }\r\n\r\n  /* Breakpoint 425px  */\r\n  @media screen and (max-width: 426px) {\r\n    width: 425px;\r\n    max-width: 425px;\r\n  }\r\n\r\n  /* Breakpoint 375px  */\r\n  @media screen and (max-width: 376px) {\r\n    width: 375px;\r\n    max-width: 375px;\r\n  }\r\n\r\n  /* Breakpoint 320px  */\r\n  @media screen and (max-width: 321px) {\r\n    width: 320px;\r\n    max-width: 320px;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\n// Importing Components\nimport Navbar from \"./App/components/layouts/Navbar/Navbar.component\";\n// import Footer from \"./App/components/layouts/Footer/Footer.component\";\n\n// Importing Pages\nimport Homepage from \"./App/pages/Homepage/Homepage\";\nimport AboutPage from \"./App/pages/About/AboutPage\";\nimport GithubPage from \"./App/pages/GithubPage/GithubPage\";\nimport UserDetailPage from \"./App/pages/UserDetailPage/UserDetailPage\";\n\n// Importing redux\nimport { Provider } from \"react-redux\";\nimport store from \"./App/redux/store\";\n\n// Importing  Styles\nimport { Container } from \"./Global.styles\";\n\nconst App = () => {\n  return (\n    <>\n      <HashRouter>\n        <Provider store={store}>\n          <Navbar />\n          <Container>\n            <Switch>\n              <Route exact path=\"/\" component={Homepage} />\n              <Route exact path=\"/about\" component={AboutPage} />\n              <Route exact path=\"/github\" component={GithubPage} />\n              <Route exact path=\"/github/:login\" component={UserDetailPage} />\n            </Switch>\n          </Container>\n          {/* <Footer /> */}\n        </Provider>\n      </HashRouter>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// Importing Global Styles\nimport { GlobalStyles } from \"./Global.styles\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}